<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true"
    tools:ignore="SpeakableTextPresentCheck">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <TextView
            android:id="@+id/P_Syntax_Text6"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="Java Multi Line Comment"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="20sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toTopOf="@+id/guideline_horizontal1"
            tools:ignore="TextSizeCheck,VisualLintLongText" />

    <TextView
        android:id="@+id/P_Syntax_Text7"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="8dp"
        android:text="A multi-line comments can occupy at least 2 lines of code and more that depends to the preference of the programmer or developer. It can also disregard codes and transform into comments by clicking “ctrl” on the keyboard and “/” simultaneously."
        android:textColor="#000000"
        android:textIsSelectable="false"
        android:textSize="18sp"
        app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
        app:layout_constraintTop_toBottomOf="@+id/P_Syntax_Text6"
        tools:ignore="TextSizeCheck,VisualLintLongText" />

    <HorizontalScrollView
        android:id="@+id/hv2"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
        app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
        app:layout_constraintTop_toBottomOf="@+id/P_Syntax_Text7">

        <WebView
            android:id="@+id/java_code_multi_line_comment"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:fontFamily="@font/font"
            tools:ignore="WebViewLayout" />
    </HorizontalScrollView>

    <TextView
        android:id="@+id/P_Comments_Text9"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Javadoc Comment"
        android:textColor="#000000"
        android:textIsSelectable="false"
        android:textSize="20sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
        app:layout_constraintTop_toBottomOf="@+id/hv2"
        tools:ignore="TextSizeCheck,VisualLintLongText" />

    <TextView
        android:id="@+id/P_Comments_Text10"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="8dp"
        android:text="A Javadoc comments are special type of comments that is used in Java to generate automatic documentation. It is usually written in a specific format that can be used to document program elements such as classes, interfaces, methods, fields, etc. This is then processed by the Javadoc tool, which later on creates HTML-based documentation files. Javadoc comments usually begin with “/**” and end with “*/” and can include various tags and annotations that provides detailed information about the documented elements."
        android:textColor="#000000"
        android:textIsSelectable="false"
        android:textSize="18sp"
        app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
        app:layout_constraintTop_toBottomOf="@+id/P_Comments_Text9"
        tools:ignore="TextSizeCheck,VisualLintLongText" />

    <HorizontalScrollView
        android:id="@+id/hv3"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
        app:layout_constraintHorizontal_bias="1.0"
        app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
        app:layout_constraintTop_toBottomOf="@+id/P_Comments_Text10">

        <WebView
            android:id="@+id/java_code_square_function"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:fontFamily="@font/font"
            tools:ignore="WebViewLayout" />
    </HorizontalScrollView>


        <ImageView
            android:id="@+id/P_Syntax_imageView1"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginTop="16dp"
            android:contentDescription="@string/codey_python_cut"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/hv3"
            app:srcCompat="@drawable/codey_java_cut" />

        <TextView
            android:id="@+id/P_Comments_fix1"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:background="@drawable/callout_background"
            android:text="Always remember that it is a good practice to include comments in the code to improve its readability and maintainability as well as easily identify the errors when the program stops producing output and needs to be debug by the developer!"
            app:layout_constraintBottom_toBottomOf="@+id/P_Syntax_imageView1"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toEndOf="@+id/P_Syntax_imageView1"
            app:layout_constraintTop_toTopOf="@+id/P_Syntax_imageView1"
            app:layout_constraintVertical_bias="0.04"
            tools:ignore="TextSizeCheck" />

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline_vertical1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_begin="15dp" />

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline_vertical2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_end="15dp" />

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline_horizontal1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintGuide_begin="15dp" />

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline_horizontal2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintGuide_end="15dp" />

    <androidx.constraintlayout.widget.Group
        android:id="@+id/group"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="guideline_vertical1,guideline_vertical2,guideline_horizontal1,guideline_horizontal2" />
</androidx.constraintlayout.widget.ConstraintLayout>
    </ScrollView>