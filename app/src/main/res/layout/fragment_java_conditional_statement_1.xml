<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true"
    tools:ignore="SpeakableTextPresentCheck">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <ImageView
            android:id="@+id/P_Variables_imageView1"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:contentDescription="@string/codey_python_cut"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toTopOf="@+id/guideline_horizontal1"
            app:srcCompat="@drawable/codey_java_cut" />

        <TextView
            android:id="@+id/textView"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:background="@drawable/callout_background"
            android:text="Hello, Im Codey! I'd be happy to help you understand Conditional statements in Java programming. "
            app:layout_constraintBottom_toBottomOf="@+id/P_Variables_imageView1"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toEndOf="@+id/P_Variables_imageView1"
            app:layout_constraintTop_toTopOf="@+id/P_Variables_imageView1"
            app:layout_constraintVertical_bias="0.04"
            tools:ignore="TextSizeCheck" />

        <TextView
            android:id="@+id/P_Variables_Text1"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:gravity="center"
            android:text="Conditional Statement"
            android:textColor="#000000"
            android:textSize="20sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.464"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/textView" />

        <TextView
            android:id="@+id/P_Variables_Text2"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="In Java, Conditional statements provide code's flow control through evaluation of certain conditions and execution of specific blocks of code depending on its results. This type of statement helps to create flexible and dynamic programs that are capable of adaptation to different scenarios. By making use of perplexity and burstiness, the program can truly reach its full potential - by having some sentences be longer than the average, while others are shorter. In this way, the same program can be adapted to diverse and varied environments."
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="18sp"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_Variables_Text1"
            tools:ignore="TextSizeCheck,VisualLintLongText" />

        <ImageView
            android:id="@+id/P_condition_imageView1"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginTop="16dp"
            android:contentDescription="@string/codey_python_cut"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_Variables_Text2"
            app:srcCompat="@drawable/codey_java_cut" />

        <TextView
            android:id="@+id/conditiontextView1"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:background="@drawable/callout_background"
            android:text="You already know that Java supports the usual logical conditions from mathematics:"
            app:layout_constraintBottom_toBottomOf="@+id/P_condition_imageView1"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toEndOf="@+id/P_condition_imageView1"
            app:layout_constraintTop_toTopOf="@+id/P_condition_imageView1"
            app:layout_constraintVertical_bias="0.04"
            tools:ignore="TextSizeCheck" />

        <TextView
            android:id="@+id/p_Operators_Text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:text="Comparison Operators:"
            android:textColor="#000000"
            android:textSize="20sp"
            android:textStyle="bold"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_condition_imageView1" />

        <TextView
            android:id="@+id/P_Operators_Text03"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:text="@string/j_operators_description"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="18sp"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="1.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/p_Operators_Text"
            tools:ignore="TextSizeCheck,VisualLintLongText" />


        <TextView
            android:id="@+id/P_Syntax_Text6"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:text="Logical Operators:"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="20sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_Operators_Text03"
            tools:ignore="TextSizeCheck,VisualLintLongText" />

        <TextView
            android:id="@+id/P_Syntax_Text7"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:text="@string/j_operators_description1"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="18sp"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_Syntax_Text6"
            tools:ignore="TextSizeCheck,VisualLintLongText" />


        <ImageView
            android:id="@+id/P_condition_imageView2"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginTop="16dp"
            android:contentDescription="@string/codey_python_cut"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/P_Syntax_Text7"
            app:srcCompat="@drawable/codey_java_cut" />

        <TextView
            android:id="@+id/conditiontextView2"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:background="@drawable/callout_background"
            android:text="You can use these conditions to perform different actions for different decisions."
            app:layout_constraintBottom_toBottomOf="@+id/P_condition_imageView2"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toEndOf="@+id/P_condition_imageView2"
            app:layout_constraintTop_toTopOf="@+id/P_condition_imageView2"
            app:layout_constraintVertical_bias="0.04"
            tools:ignore="TextSizeCheck" />


        <TextView
            android:id="@+id/conditiontextView3"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="32dp"
            android:text="Java has the following conditional statements:"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="20sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/conditiontextView2"
            tools:ignore="TextSizeCheck,VisualLintLongText" />

        <TextView
            android:id="@+id/conditiontextView4"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="16dp"
            android:text="@string/control_flow_description"
            android:textColor="#000000"
            android:textIsSelectable="false"
            android:textSize="18sp"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/conditiontextView3"
            tools:ignore="TextSizeCheck,VisualLintLongText" />

        <ImageView
            android:id="@+id/P_looping_imageView3"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginTop="17dp"
            android:contentDescription="@string/codey_python_cut"
            app:layout_constraintStart_toStartOf="@+id/guideline_vertical1"
            app:layout_constraintTop_toBottomOf="@+id/conditiontextView4"
            app:srcCompat="@drawable/codey_java_cut" />

        <TextView
            android:id="@+id/loopingtextView3"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:background="@drawable/callout_background"
            android:text="These looping statements provide you with powerful tools to iterate over sequences, execute code repeatedly, and control the flow of your program."
            app:layout_constraintBottom_toBottomOf="@+id/P_looping_imageView3"
            app:layout_constraintEnd_toStartOf="@+id/guideline_vertical2"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toEndOf="@+id/P_looping_imageView3"
            app:layout_constraintTop_toTopOf="@+id/P_looping_imageView3"
            app:layout_constraintVertical_bias="0.0"
            tools:ignore="TextSizeCheck" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline_vertical1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            app:layout_constraintGuide_begin="15dp" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline_vertical2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            app:layout_constraintGuide_end="15dp" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline_horizontal1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            app:layout_constraintGuide_begin="15dp" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline_horizontal2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            app:layout_constraintGuide_end="15dp" />

        <androidx.constraintlayout.widget.Group
            android:id="@+id/group"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:constraint_referenced_ids="guideline_vertical1,guideline_vertical2,guideline_horizontal1,guideline_horizontal2" />
    </androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>